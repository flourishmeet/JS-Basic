// 변수(variable)
// 키워드 변수명= 값;
// 위와 같은 형식으로 선언
// 키워드의 경우 var, let, const 이렇게 3가지가 있음
// var          : 중복선언 가능, 재할당 가능, 일반적인 변수를 만들때 사용, 함수 단위로 사용
// let          : 중복선언 불가능, 재할당 가능, 블록{} 단위로 사용
// const        : 중복선언 불가능, 재할당 선언 불가능, 보통 값이 변하지 않는 경우 주로 사용, 블록{} 단위로 사용
// JS에서는 모든 코드 한줄 뒤에 세미콜론; 을 붙여야됨

// 변수 이름 규칙
// 숫자로 시작 안됨
// 띄어쓰기 안됨
// _ 를 제외한 모든 특수문자 불가능

// var age= 13;            // 변수를 선언하자마자 값 할당
// let name= "Alice"
// const height= 188;

// age=20;                 // 재할당

// var test;               //변수 생성
// test = "CIT"            // 변수에 값 할당

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ //


// 자료형(Data Types)
// 자료형은 값의 종류
// string       문자    => 따옴표로 이루어져 있음(" ", ' '), 따옴표가 있으면 무조건 문자
// number       숫자    => 따옴표 X, 정수, 실수 다 포함
// boolean      논리    => true, false 딱 2개만 있음
// undefined           => 같이 저장이 안된 변수
// null         널      => 값이 없는 것

// var text = "Hello World";   //string 자료형이 저장
// var num = -3.14;            //number 자료형이 저장
// var is = true;              // boolean 자료형이 저장
// var n= null;                // null 이 저장


// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ //


//출력
//console.log("화면에 출력할 값")
// 값을 여러개 확인하기 위해서는 , (콤마) 사용

// console.log("Hello World"); // Hello World 풀력

// var pi = 3.14;
// console.log(pi);

// console.log("hello,pi");

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ //


// 자료형 (data type) 확인
// typeof(값);
// typeof 값
// 위 두가지 형식 사용, typeof 만 사용을 했을 경우 실행은 하지만, 눈으로 자료형 확인이 불가능
// console.log() 내부에 사용하여 자료형을 눈으로 확인

// console.log(typeof(3.14));

// var t = "Hello";
// console.log(typeof t);


// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ //


// + 더하기
// - 빼기
// * 곱하기
// / 몫
// % 나머지
// ** 제곱

// var a = 10;
// var b =3;
// console.log(a+b);
// console.log(a-b);
// console.log(a*b);
// console.log(a/b);
// console.log(a%b);
// console.log(a**b);


// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ //


// 이스케이프 코드
// 특별한 문자로 문자 출력시에 사용한다 =>따옴표 기호(" ",' ')
// \n 문자열 안에서 줄을 바꿀떄 사용
// \t 문자열 사이에 탭 간격을 줄떄 사용
// \\ 문자 \를 그대로 표현을 떄 사용
// \'   ' 를 출력
// \"   " 를 출력

// console.log("Hello World");
// console.log("아메리카노\t3,000");
// console.log("카푸치노\t4000");
// console.log("\\ \' \"");


// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ //

// console.log("------------------------------------------------------------------");
// console.log("| COFFEE\t\t\t\t\t |\t\tHEALTHY TEA                 |");
// console.log("| 에스프레소\t\t3.0\t\t-\t|   자몽차/레몬차/유자차\      3.5        |");
// console.log("| 카라멜마끼야또\t 3.8\t4.3\t|  청포도차/대추차/생강차     3.0        |");
// console.log("------------------------------------------------------------------");


// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ //


// Arrays
// 하나의 변수에 여러개의 값을 저장 가능, 다양한 자료형을 섞어서 저장이 가능하지만 보통의 경우 한개의 자료형으로 통일
// []기호를 사용하며, 순서의 경우 인덱스(index)라고 말하며 0으로 시작
// 값을 구분할 때는 ,를 사용하며, 길이, 크기는 몇개가 저장되어 있는지 말함
// 값을 참초 할떄는
// 변수 [인덱스 번호]
// 위 형식으로 참조

// var arr = [1,2, "Hello", false]
// console.log(arr[2]);


// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ //


// Dictionary
// key와 value로 구성되어 있으며 : 으로 구분, {key:value, key:value} 기호로 표시
// 값 참조의 경우 key를 사용, index라는 순서 개념이 없으며, key를 숫자로 하지는 않음(index와 혼동될 수 있기 떄문)
// 참조의 경우{}기호가 아닌 []사용

// var dic = {"class":5, "age":18, "name":"Kim"};
// console.log(dic["class"])


// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ //


// for 반복
// for (변수 in 변수)